<?xml version="1.0" encoding="UTF-8" ?>
<!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <contextName>mikufans</contextName>
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} : %msg%n" />
    <property name="LOG_PATTERN_2" value="%highlight(%d{yyyy-MM-dd HH:mm:ss.SSS}) %cyan(%-5level) %magenta([%16thread]) %yellow(%-40.40logger{40}) %cyan([%-20.20method]): %msg%n"/>
    <property name="ENCODING" value="UTF-8" />
    <property name="LOG_NAME" value="%d{yyyy-MM-dd}.%i.log"/>
    <property name="LOG_ERROR_NAME" value="%d{yyyy-MM-dd}.error.%i.log"/>
    <springProperty name="LOG_PATH" scope="context" source="logging.file.path"/>

    <!--    定义控制台日志输出格式-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- 按照上面配置的LOG_PATTERN来打印日志 -->
            <pattern>${LOG_PATTERN_2}</pattern>
            <charset>${ENCODING}</charset>
        </encoder>
    </appender>

    <!--    定义日志文件输出格式-->
    <appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按照上面配置的FILE_PATH路径来保存日志 -->
            <fileNamePattern>${LOG_PATH}/${LOG_NAME}</fileNamePattern>
            <!-- 日志保存30天 -->
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 单个日志文件的最大，超过则新建日志文件存储 -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <!-- 按照上面配置的LOG_PATTERN来打印日志 -->
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${ENCODING}</charset>
        </encoder>
    </appender>

<!--    将错误日志另外再存入一个单独的文件-->
    <appender name="ROLLING_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${LOG_ERROR_NAME}</fileNamePattern>
            <maxHistory>180</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${ENCODING}</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <!--将appender都加入到root根标签-->
    <root level="info">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ROLLING_FILE"/>
        <appender-ref ref="ROLLING_ERROR_FILE" />
    </root>
</configuration>